var Stack=require("./_Stack"),arrayEach=require("./_arrayEach"),assignValue=require("./_assignValue"),baseAssign=require("./_baseAssign"),baseAssignIn=require("./_baseAssignIn"),cloneBuffer=require("./_cloneBuffer"),copyArray=require("./_copyArray"),copySymbols=require("./_copySymbols"),copySymbolsIn=require("./_copySymbolsIn"),getAllKeys=require("./_getAllKeys"),getAllKeysIn=require("./_getAllKeysIn"),getTag=require("./_getTag"),initCloneArray=require("./_initCloneArray"),initCloneByTag=require("./_initCloneByTag"),initCloneObject=require("./_initCloneObject"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isMap=require("./isMap"),isObject=require("./isObject"),isSet=require("./isSet"),keys=require("./keys"),CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4,argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",genTag="[object GeneratorFunction]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",cloneableTags={};function baseClone(r,n,t,e,a,g){var o,l=n&CLONE_DEEP_FLAG,i=n&CLONE_FLAT_FLAG,s=n&CLONE_SYMBOLS_FLAG;if(t&&(o=a?t(r,e,a,g):t(r)),void 0!==o)return o;if(!isObject(r))return r;var c=isArray(r);if(c){if(o=initCloneArray(r),!l)return copyArray(r,o)}else{var T=getTag(r),b=T==funcTag||T==genTag;if(isBuffer(r))return cloneBuffer(r,l);if(T==objectTag||T==argsTag||b&&!a){if(o=i||b?{}:initCloneObject(r),!l)return i?copySymbolsIn(r,baseAssignIn(o,r)):copySymbols(r,baseAssign(o,r))}else{if(!cloneableTags[T])return a?r:{};o=initCloneByTag(r,T,l)}}g||(g=new Stack);var u=g.get(r);if(u)return u;if(g.set(r,o),isSet(r))return r.forEach(function(e){o.add(baseClone(e,n,t,e,r,g))}),o;if(isMap(r))return r.forEach(function(e,a){o.set(a,baseClone(e,n,t,a,r,g))}),o;var y=s?i?getAllKeysIn:getAllKeys:i?keysIn:keys,f=c?void 0:y(r);return arrayEach(f||r,function(e,a){f&&(e=r[a=e]),assignValue(o,a,baseClone(e,n,t,a,r,g))}),o}cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=!0,cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=!1,module.exports=baseClone;